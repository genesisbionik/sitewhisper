"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/openrouter.ts":
/*!***************************!*\
  !*** ./lib/openrouter.ts ***!
  \***************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateChatCompletion: function() { return /* binding */ generateChatCompletion; }\n/* harmony export */ });\nconst DEEPSEEK_API_KEY = \"your_deepseek_api_key_here\";\n// Add more detailed logging\nconsole.log(\"OpenRouter initialization:\", {\n    isProduction: \"development\" === \"production\",\n    hasApiKey: !!DEEPSEEK_API_KEY,\n    keyPrefix: DEEPSEEK_API_KEY === null || DEEPSEEK_API_KEY === void 0 ? void 0 : DEEPSEEK_API_KEY.substring(0, 4) // Only log first 4 chars for security\n});\nif (!DEEPSEEK_API_KEY) {\n    console.error(\"DeepSeek API key is missing. Please check your environment variables.\");\n}\nasync function generateChatCompletion(messages, onStream) {\n    // Add request logging\n    console.log(\"Attempting API call:\", {\n        hasMessages: messages.length > 0,\n        apiKeyStatus: DEEPSEEK_API_KEY ? \"Present\" : \"Missing\",\n        endpoint: \"https://api.deepseek.com/v1/chat/completions\"\n    });\n    console.log(\"Messages:\", messages);\n    console.log(\"API Key Status:\", DEEPSEEK_API_KEY ? \"Present\" : \"Missing\");\n    if (!DEEPSEEK_API_KEY) {\n        return \"I apologize, but I'm currently running in limited mode without AI capabilities. The administrator needs to configure the DeepSeek API key to enable advanced AI features.\";\n    }\n    try {\n        var _data_choices__message, _data_choices_, _data_choices;\n        const response = await fetch(\"https://api.deepseek.com/v1/chat/completions\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \".concat(DEEPSEEK_API_KEY)\n            },\n            body: JSON.stringify({\n                model: \"deepseek-chat\",\n                messages: messages,\n                temperature: 0.7,\n                max_tokens: 2000,\n                top_p: 0.95,\n                frequency_penalty: 0,\n                presence_penalty: 0\n            })\n        });\n        if (!response.ok) {\n            const errorBody = await response.text();\n            throw new Error(\"DeepSeek API Error: \".concat(response.status, \" \").concat(response.statusText, \". \").concat(errorBody));\n        }\n        const data = await response.json();\n        console.log(\"API Response:\", data);\n        if (!((_data_choices = data.choices) === null || _data_choices === void 0 ? void 0 : (_data_choices_ = _data_choices[0]) === null || _data_choices_ === void 0 ? void 0 : (_data_choices__message = _data_choices_.message) === null || _data_choices__message === void 0 ? void 0 : _data_choices__message.content)) {\n            throw new Error(\"Invalid response structure from DeepSeek API\");\n        }\n        return data.choices[0].message.content;\n    } catch (error) {\n        console.error(\"DeepSeek API Error:\", error);\n        throw error;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9vcGVucm91dGVyLnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxNQUFNQSxtQkFBbUJDLDRCQUF3QztBQUVqRSw0QkFBNEI7QUFDNUJHLFFBQVFDLEdBQUcsQ0FBQyw4QkFBOEI7SUFDeENDLGNBQWNMLGtCQUF5QjtJQUN2Q00sV0FBVyxDQUFDLENBQUNQO0lBQ2JRLFNBQVMsRUFBRVIsNkJBQUFBLHVDQUFBQSxpQkFBa0JTLFNBQVMsQ0FBQyxHQUFHLEdBQUcsc0NBQXNDO0FBQ3JGO0FBRUEsSUFBSSxDQUFDVCxrQkFBa0I7SUFDckJJLFFBQVFNLEtBQUssQ0FBQztBQUNoQjtBQUVPLGVBQWVDLHVCQUNwQkMsUUFBNkMsRUFDN0NDLFFBQWtDO0lBRWxDLHNCQUFzQjtJQUN0QlQsUUFBUUMsR0FBRyxDQUFDLHdCQUF3QjtRQUNsQ1MsYUFBYUYsU0FBU0csTUFBTSxHQUFHO1FBQy9CQyxjQUFjaEIsbUJBQW1CLFlBQVk7UUFDN0NpQixVQUFVO0lBQ1o7SUFFQWIsUUFBUUMsR0FBRyxDQUFDLGFBQWFPO0lBQ3pCUixRQUFRQyxHQUFHLENBQUMsbUJBQW1CTCxtQkFBbUIsWUFBWTtJQUU5RCxJQUFJLENBQUNBLGtCQUFrQjtRQUNyQixPQUFPO0lBQ1Q7SUFFQSxJQUFJO1lBMEJHa0Isd0JBQUFBLGdCQUFBQTtRQXpCTCxNQUFNQyxXQUFXLE1BQU1DLE1BQU0sZ0RBQWdEO1lBQzNFQyxRQUFRO1lBQ1JDLFNBQVM7Z0JBQ1AsZ0JBQWdCO2dCQUNoQixpQkFBaUIsVUFBMkIsT0FBakJ0QjtZQUM3QjtZQUNBdUIsTUFBTUMsS0FBS0MsU0FBUyxDQUFDO2dCQUNuQkMsT0FBTztnQkFDUGQsVUFBVUE7Z0JBQ1ZlLGFBQWE7Z0JBQ2JDLFlBQVk7Z0JBQ1pDLE9BQU87Z0JBQ1BDLG1CQUFtQjtnQkFDbkJDLGtCQUFrQjtZQUNwQjtRQUNGO1FBRUEsSUFBSSxDQUFDWixTQUFTYSxFQUFFLEVBQUU7WUFDaEIsTUFBTUMsWUFBWSxNQUFNZCxTQUFTZSxJQUFJO1lBQ3JDLE1BQU0sSUFBSUMsTUFBTSx1QkFBMENoQixPQUFuQkEsU0FBU2lCLE1BQU0sRUFBQyxLQUEyQkgsT0FBeEJkLFNBQVNrQixVQUFVLEVBQUMsTUFBYyxPQUFWSjtRQUNwRjtRQUVBLE1BQU1mLE9BQU8sTUFBTUMsU0FBU21CLElBQUk7UUFDaENsQyxRQUFRQyxHQUFHLENBQUMsaUJBQWlCYTtRQUU3QixJQUFJLEdBQUNBLGdCQUFBQSxLQUFLcUIsT0FBTyxjQUFackIscUNBQUFBLGlCQUFBQSxhQUFjLENBQUMsRUFBRSxjQUFqQkEsc0NBQUFBLHlCQUFBQSxlQUFtQnNCLE9BQU8sY0FBMUJ0Qiw2Q0FBQUEsdUJBQTRCdUIsT0FBTyxHQUFFO1lBQ3hDLE1BQU0sSUFBSU4sTUFBTTtRQUNsQjtRQUVBLE9BQU9qQixLQUFLcUIsT0FBTyxDQUFDLEVBQUUsQ0FBQ0MsT0FBTyxDQUFDQyxPQUFPO0lBQ3hDLEVBQUUsT0FBTy9CLE9BQU87UUFDZE4sUUFBUU0sS0FBSyxDQUFDLHVCQUF1QkE7UUFDckMsTUFBTUE7SUFDUjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2xpYi9vcGVucm91dGVyLnRzP2E2ODMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgREVFUFNFRUtfQVBJX0tFWSA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0RFRVBTRUVLX0FQSV9LRVk7XG5cbi8vIEFkZCBtb3JlIGRldGFpbGVkIGxvZ2dpbmdcbmNvbnNvbGUubG9nKFwiT3BlblJvdXRlciBpbml0aWFsaXphdGlvbjpcIiwge1xuICBpc1Byb2R1Y3Rpb246IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicsXG4gIGhhc0FwaUtleTogISFERUVQU0VFS19BUElfS0VZLFxuICBrZXlQcmVmaXg6IERFRVBTRUVLX0FQSV9LRVk/LnN1YnN0cmluZygwLCA0KSAvLyBPbmx5IGxvZyBmaXJzdCA0IGNoYXJzIGZvciBzZWN1cml0eVxufSk7XG5cbmlmICghREVFUFNFRUtfQVBJX0tFWSkge1xuICBjb25zb2xlLmVycm9yKFwiRGVlcFNlZWsgQVBJIGtleSBpcyBtaXNzaW5nLiBQbGVhc2UgY2hlY2sgeW91ciBlbnZpcm9ubWVudCB2YXJpYWJsZXMuXCIpO1xufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2VuZXJhdGVDaGF0Q29tcGxldGlvbihcbiAgbWVzc2FnZXM6IHsgcm9sZTogc3RyaW5nOyBjb250ZW50OiBzdHJpbmcgfVtdLFxuICBvblN0cmVhbT86IChjaHVuazogc3RyaW5nKSA9PiB2b2lkXG4pIHtcbiAgLy8gQWRkIHJlcXVlc3QgbG9nZ2luZ1xuICBjb25zb2xlLmxvZyhcIkF0dGVtcHRpbmcgQVBJIGNhbGw6XCIsIHtcbiAgICBoYXNNZXNzYWdlczogbWVzc2FnZXMubGVuZ3RoID4gMCxcbiAgICBhcGlLZXlTdGF0dXM6IERFRVBTRUVLX0FQSV9LRVkgPyAnUHJlc2VudCcgOiAnTWlzc2luZycsXG4gICAgZW5kcG9pbnQ6ICdodHRwczovL2FwaS5kZWVwc2Vlay5jb20vdjEvY2hhdC9jb21wbGV0aW9ucydcbiAgfSk7XG5cbiAgY29uc29sZS5sb2coXCJNZXNzYWdlczpcIiwgbWVzc2FnZXMpO1xuICBjb25zb2xlLmxvZyhcIkFQSSBLZXkgU3RhdHVzOlwiLCBERUVQU0VFS19BUElfS0VZID8gXCJQcmVzZW50XCIgOiBcIk1pc3NpbmdcIik7XG5cbiAgaWYgKCFERUVQU0VFS19BUElfS0VZKSB7XG4gICAgcmV0dXJuIFwiSSBhcG9sb2dpemUsIGJ1dCBJJ20gY3VycmVudGx5IHJ1bm5pbmcgaW4gbGltaXRlZCBtb2RlIHdpdGhvdXQgQUkgY2FwYWJpbGl0aWVzLiBUaGUgYWRtaW5pc3RyYXRvciBuZWVkcyB0byBjb25maWd1cmUgdGhlIERlZXBTZWVrIEFQSSBrZXkgdG8gZW5hYmxlIGFkdmFuY2VkIEFJIGZlYXR1cmVzLlwiO1xuICB9XG5cbiAgdHJ5IHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCdodHRwczovL2FwaS5kZWVwc2Vlay5jb20vdjEvY2hhdC9jb21wbGV0aW9ucycsIHtcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICAnQXV0aG9yaXphdGlvbic6IGBCZWFyZXIgJHtERUVQU0VFS19BUElfS0VZfWAsXG4gICAgICB9LFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICBtb2RlbDogJ2RlZXBzZWVrLWNoYXQnLFxuICAgICAgICBtZXNzYWdlczogbWVzc2FnZXMsXG4gICAgICAgIHRlbXBlcmF0dXJlOiAwLjcsXG4gICAgICAgIG1heF90b2tlbnM6IDIwMDAsXG4gICAgICAgIHRvcF9wOiAwLjk1LFxuICAgICAgICBmcmVxdWVuY3lfcGVuYWx0eTogMCxcbiAgICAgICAgcHJlc2VuY2VfcGVuYWx0eTogMFxuICAgICAgfSksXG4gICAgfSk7XG5cbiAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICBjb25zdCBlcnJvckJvZHkgPSBhd2FpdCByZXNwb25zZS50ZXh0KCk7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYERlZXBTZWVrIEFQSSBFcnJvcjogJHtyZXNwb25zZS5zdGF0dXN9ICR7cmVzcG9uc2Uuc3RhdHVzVGV4dH0uICR7ZXJyb3JCb2R5fWApO1xuICAgIH1cblxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgY29uc29sZS5sb2coXCJBUEkgUmVzcG9uc2U6XCIsIGRhdGEpO1xuXG4gICAgaWYgKCFkYXRhLmNob2ljZXM/LlswXT8ubWVzc2FnZT8uY29udGVudCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHJlc3BvbnNlIHN0cnVjdHVyZSBmcm9tIERlZXBTZWVrIEFQSScpO1xuICAgIH1cblxuICAgIHJldHVybiBkYXRhLmNob2ljZXNbMF0ubWVzc2FnZS5jb250ZW50O1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0RlZXBTZWVrIEFQSSBFcnJvcjonLCBlcnJvcik7XG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn0iXSwibmFtZXMiOlsiREVFUFNFRUtfQVBJX0tFWSIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19ERUVQU0VFS19BUElfS0VZIiwiY29uc29sZSIsImxvZyIsImlzUHJvZHVjdGlvbiIsImhhc0FwaUtleSIsImtleVByZWZpeCIsInN1YnN0cmluZyIsImVycm9yIiwiZ2VuZXJhdGVDaGF0Q29tcGxldGlvbiIsIm1lc3NhZ2VzIiwib25TdHJlYW0iLCJoYXNNZXNzYWdlcyIsImxlbmd0aCIsImFwaUtleVN0YXR1cyIsImVuZHBvaW50IiwiZGF0YSIsInJlc3BvbnNlIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJtb2RlbCIsInRlbXBlcmF0dXJlIiwibWF4X3Rva2VucyIsInRvcF9wIiwiZnJlcXVlbmN5X3BlbmFsdHkiLCJwcmVzZW5jZV9wZW5hbHR5Iiwib2siLCJlcnJvckJvZHkiLCJ0ZXh0IiwiRXJyb3IiLCJzdGF0dXMiLCJzdGF0dXNUZXh0IiwianNvbiIsImNob2ljZXMiLCJtZXNzYWdlIiwiY29udGVudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/openrouter.ts\n"));

/***/ })

});